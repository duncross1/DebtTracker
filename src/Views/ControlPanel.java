/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Classes.DBManager;
import Classes.Person;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

/** Control Panel View
 * this is the main control panel for the application
 *
 * @author Ross Duncan
 * 30/04/2020
 */
public class ControlPanel extends javax.swing.JFrame {

    
    //Hashmap for storing debtees as they are loaded in
    private HashMap<Integer, Person> debtees = new HashMap<>();
    //Load dbManager
    private DBManager db = new DBManager();;
    
    /**
     * Creates new form ControlPanel
     */
    public ControlPanel() {
        initComponents();
        
        //Calls the method to load the table
        LoadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDebtees = new javax.swing.JTable();
        btnAddNewDebtee = new javax.swing.JButton();
        btnViewDebtee = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        btnAddNewDebt = new javax.swing.JButton();
        btnRemoveDebtee = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblDebtees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Debtee", "Total Debt Value Â£"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDebtees);

        btnAddNewDebtee.setText("Add New Debtee");
        btnAddNewDebtee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewDebteeActionPerformed(evt);
            }
        });

        btnViewDebtee.setText("View Debtee");
        btnViewDebtee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDebteeActionPerformed(evt);
            }
        });

        lblMessage.setText("Message");

        btnAddNewDebt.setText("Add New Debt");
        btnAddNewDebt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewDebtActionPerformed(evt);
            }
        });

        btnRemoveDebtee.setText("Remove Debtee");
        btnRemoveDebtee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveDebteeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddNewDebtee)
                                .addGap(32, 32, 32)
                                .addComponent(btnViewDebtee)
                                .addGap(34, 34, 34)
                                .addComponent(btnRemoveDebtee))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddNewDebt)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(lblMessage)))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNewDebtee)
                    .addComponent(btnViewDebtee)
                    .addComponent(btnRemoveDebtee))
                .addGap(18, 18, 18)
                .addComponent(btnAddNewDebt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(lblMessage)
                .addGap(67, 67, 67))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddNewDebteeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewDebteeActionPerformed
        AddDebtee ad = new AddDebtee();
        this.dispose();
        ad.setVisible(true);
    }//GEN-LAST:event_btnAddNewDebteeActionPerformed

    private void btnViewDebteeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDebteeActionPerformed
        //If a debtee has been selected from the table
        if(tblDebtees.getSelectedRow() != -1) 
        {
            //Get model of the debtees table
            DefaultTableModel model = (DefaultTableModel)tblDebtees.getModel(); 
            //Get the selected debtees ID
            int debteeID = Integer.parseInt(String.valueOf(model.getValueAt(tblDebtees.getSelectedRow(), 0)));
            //Get the selected debtees name
            String debteeName = String.valueOf(model.getValueAt(tblDebtees.getSelectedRow(), 1));
            //Open view debtees view passing in the selected debtees ID
            ViewDebtee vd = new ViewDebtee(debteeID, debteeName);
            this.dispose();
            vd.setVisible(true);
        }
        else
        {
            lblMessage.setText("Please Select A Debtee from the table first");
        }
    }//GEN-LAST:event_btnViewDebteeActionPerformed

    private void btnAddNewDebtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewDebtActionPerformed
        //If a debtee has been selected from the table
        if(tblDebtees.getSelectedRow() != -1) 
        {
            //Get model of the debtees table
            DefaultTableModel model = (DefaultTableModel)tblDebtees.getModel(); 
            //Get the selected debtees ID
            int debteeID = Integer.parseInt(String.valueOf(model.getValueAt(tblDebtees.getSelectedRow(), 0)));
            //Get the selected debtees name
            String debteeName = String.valueOf(model.getValueAt(tblDebtees.getSelectedRow(), 1));
            //Open view debtees view passing in the selected debtees ID
            AddDebt ad = new AddDebt(debteeID, debteeName);
            this.dispose();
            ad.setVisible(true);
        }
        else
        {
            lblMessage.setText("Please Select A Debtee from the table first");
        }
    }//GEN-LAST:event_btnAddNewDebtActionPerformed

    private void btnRemoveDebteeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveDebteeActionPerformed
        //If a debtee has been selected from the table
        if(tblDebtees.getSelectedRow() != -1) 
        {
            //Get model of the debtees table
            DefaultTableModel model = (DefaultTableModel)tblDebtees.getModel(); 
            //Get the selected debtees ID
            int debteeID = Integer.parseInt(String.valueOf(model.getValueAt(tblDebtees.getSelectedRow(), 0)));
            //Call the DBManager method remove this debtee from the database
            db.removeDebtee(debteeID);
            
            //calls the method to load the table, basically updating it by reloading it
            LoadTable();
        }
        else
        {
            lblMessage.setText("Please Select A Debtee from the table first");
        }
    }//GEN-LAST:event_btnRemoveDebteeActionPerformed

    
    private void LoadTable()
    {
        //Clear the debtees hashmap
        debtees.clear();
        //Load in the users debtees from the database in the debtees hashmap
        debtees = db.loadPeople(debtees);
        
        //Create a table model and assign it the table model of the debtees table
        DefaultTableModel model = (DefaultTableModel)tblDebtees.getModel();
        //deletes any existing rows from the table
        model.setRowCount(0);
        //Loop through the hashmap of debtees and add them to the debtees table
        for(Map.Entry<Integer, Person> entry : debtees.entrySet())
        {
            //Get the current person(debtee) in the entry set
            Person personToAdd = entry.getValue();
            //add that person to the debtees table
            model.addRow(new Object[] 
            {personToAdd.getPeopleID(), personToAdd.getFirstName() + " " + personToAdd.getLastName(), personToAdd.getTotalDebt()});
        }
        
        lblMessage.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewDebt;
    private javax.swing.JButton btnAddNewDebtee;
    private javax.swing.JButton btnRemoveDebtee;
    private javax.swing.JButton btnViewDebtee;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JTable tblDebtees;
    // End of variables declaration//GEN-END:variables
}
